// üìö GUIA INTERATIVO DE DEBUG DO VAREJ√ÉO
// Como usar todas as ferramentas de debug e valida√ß√£o

class GuiaDebugInterativo {
    constructor() {
        this.currentTool = 0;
        this.tools = [];
        this.init();
    }
    
    init() {
        console.log('üìö === GUIA DE DEBUG VAREJ√ÉO ===');
        this.defineTools();
        this.createGuideUI();
        this.showWelcome();
    }
    
    defineTools() {
        this.tools = [
            {
                name: 'üöÄ Jornada do Usu√°rio',
                description: 'Simula a experi√™ncia completa de um cliente visitando o site',
                location: 'Painel flutuante no canto superior direito',
                howToUse: [
                    '1. Aguarde o painel aparecer automaticamente ap√≥s 7 segundos',
                    '2. Clique no bot√£o "‚ñ∂Ô∏è Pr√≥ximo Passo" para avan√ßar',
                    '3. Observe a simula√ß√£o em tempo real',
                    '4. Veja o feedback final com pontua√ß√£o',
                    '5. Use "üîÑ Reiniciar" para simular novamente'
                ],
                commands: [
                    'window.userJourney.restart() // Reinicia simula√ß√£o',
                    'window.userJourney.nextStep() // Avan√ßa um passo'
                ],
                demo: () => this.demoUserJourney()
            },
            {
                name: 'üéØ Valida√ß√£o UX',
                description: 'Testa automaticamente 30+ aspectos de experi√™ncia do usu√°rio',
                location: 'Painel flutuante no canto inferior esquerdo',
                howToUse: [
                    '1. Aparece automaticamente ap√≥s 5 segundos',
                    '2. Veja a pontua√ß√£o geral (0-100%)',
                    '3. Clique em "üîÑ Executar Novamente" para re-testar',
                    '4. Use "üìä Relat√≥rio" para ver an√°lise completa',
                    '5. Observe as categorias: Navega√ß√£o, Ofertas, Timers, etc.'
                ],
                commands: [
                    'window.uxValidator.runAllTests() // Executa todos os testes',
                    'window.uxValidator.generateReport() // Gera relat√≥rio completo'
                ],
                demo: () => this.demoUXValidation()
            },
            {
                name: 'üîî Sistema de Notifica√ß√µes',
                description: 'Notifica√ß√µes autom√°ticas sobre ofertas expirando',
                location: 'Canto superior direito da tela',
                howToUse: [
                    '1. Notifica√ß√µes aparecem automaticamente',
                    '2. Tipos: Alerta de expira√ß√£o, ofertas urgentes',
                    '3. Desaparecem automaticamente ap√≥s 5 segundos',
                    '4. Clique no "√ó" para fechar manualmente',
                    '5. Anima√ß√µes suaves de entrada e sa√≠da'
                ],
                commands: [
                    'window.notificationSystem.show("üî•", "Oferta expirando!", "warning")',
                    'window.notificationSystem.clearAll() // Remove todas'
                ],
                demo: () => this.demoNotifications()
            },
            {
                name: '‚è∞ Timers das Ofertas',
                description: 'Sistema de contagem regressiva para cada oferta',
                location: 'Dentro de cada card de oferta',
                howToUse: [
                    '1. Cada oferta tem seu pr√≥prio timer',
                    '2. Cores mudam conforme urg√™ncia:',
                    '   - Verde: Tempo normal',
                    '   - Amarelo: Aten√ß√£o (< 1 hora)',
                    '   - Vermelho: Cr√≠tico (< 30 min)',
                    '3. Atualiza√ß√£o autom√°tica a cada segundo',
                    '4. Notifica√ß√µes quando expira'
                ],
                commands: [
                    'window.offerTimers // V√™ todos os timers',
                    'window.offerTimers.simulateExpiry("offer1") // Simula expira√ß√£o'
                ],
                demo: () => this.demoTimers()
            },
            {
                name: 'üîß Console de Debug',
                description: 'Comandos avan√ßados no console do navegador',
                location: 'F12 > Console',
                howToUse: [
                    '1. Pressione F12 para abrir DevTools',
                    '2. V√° na aba "Console"',
                    '3. Digite os comandos listados',
                    '4. Pressione Enter para executar',
                    '5. Veja logs coloridos e detalhados'
                ],
                commands: [
                    'debugOfertas() // Analisa todas as ofertas',
                    'testeNavegacao() // Testa sistema de navega√ß√£o',
                    'debugVisual() // An√°lise visual completa',
                    'debugTimer() // Debug espec√≠fico de timers'
                ],
                demo: () => this.demoConsole()
            },
            {
                name: 'üìä Painel de Marketing',
                description: 'Dashboard para equipe de marketing',
                location: 'Bot√£o flutuante azul no canto inferior direito',
                howToUse: [
                    '1. Clique no bot√£o flutuante azul',
                    '2. Abas dispon√≠veis:',
                    '   - üìà Analytics: M√©tricas de performance',
                    '   - üéØ Campanhas: Criar/editar promo√ß√µes',
                    '   - üîî Notifica√ß√µes: Push marketing',
                    '3. Use formul√°rios para configurar',
                    '4. Veja estat√≠sticas em tempo real'
                ],
                commands: [
                    'document.querySelector("#fab-marketing").click() // Abre painel',
                    'mostrarMetricas() // Exibe m√©tricas detalhadas'
                ],
                demo: () => this.demoMarketingPanel()
            }
        ];
    }
    
    createGuideUI() {
        const panel = document.createElement('div');
        panel.id = 'debug-guide-panel';
        panel.style.cssText = `
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 500px;
            max-height: 600px;
            background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
            border-radius: 20px;
            padding: 25px;
            color: white;
            font-family: Arial, sans-serif;
            box-shadow: 0 25px 50px rgba(0,0,0,0.5);
            z-index: 10000;
            overflow-y: auto;
            transform: translate(-50%, -50%) scale(0.8);
            opacity: 0;
            transition: all 0.5s ease;
        `;
        
        panel.innerHTML = `
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
                <h2 style="margin: 0; font-size: 1.5em;">üìö Guia de Debug</h2>
                <button onclick="this.parentElement.parentElement.remove()" style="
                    background: rgba(255,255,255,0.2);
                    border: none;
                    color: white;
                    border-radius: 50%;
                    width: 35px;
                    height: 35px;
                    cursor: pointer;
                    font-size: 1.2em;
                ">√ó</button>
            </div>
            
            <div id="guide-navigation" style="
                display: flex;
                justify-content: space-between;
                margin-bottom: 20px;
                padding: 10px;
                background: rgba(255,255,255,0.1);
                border-radius: 10px;
            ">
                <button onclick="window.debugGuide.previousTool()" style="
                    background: rgba(255,255,255,0.2);
                    border: 1px solid rgba(255,255,255,0.3);
                    color: white;
                    padding: 8px 16px;
                    border-radius: 15px;
                    cursor: pointer;
                ">‚Üê Anterior</button>
                
                <span id="tool-counter" style="
                    align-self: center;
                    font-weight: bold;
                ">1/6</span>
                
                <button onclick="window.debugGuide.nextTool()" style="
                    background: rgba(255,255,255,0.2);
                    border: 1px solid rgba(255,255,255,0.3);
                    color: white;
                    padding: 8px 16px;
                    border-radius: 15px;
                    cursor: pointer;
                ">Pr√≥ximo ‚Üí</button>
            </div>
            
            <div id="guide-content" style="min-height: 300px;">
                <!-- Conte√∫do din√¢mico -->
            </div>
            
            <div style="text-align: center; margin-top: 20px;">
                <button onclick="window.debugGuide.demoCurrentTool()" style="
                    background: linear-gradient(45deg, #ff6b6b, #ee5a24);
                    border: none;
                    color: white;
                    padding: 12px 24px;
                    border-radius: 25px;
                    cursor: pointer;
                    font-weight: bold;
                    margin: 5px;
                ">üé¨ Ver Demonstra√ß√£o</button>
                
                <button onclick="window.debugGuide.showAllCommands()" style="
                    background: linear-gradient(45deg, #4834d4, #6c5ce7);
                    border: none;
                    color: white;
                    padding: 12px 24px;
                    border-radius: 25px;
                    cursor: pointer;
                    font-weight: bold;
                    margin: 5px;
                ">üìù Todos os Comandos</button>
            </div>
        `;
        
        document.body.appendChild(panel);
        
        // Anima entrada
        setTimeout(() => {
            panel.style.transform = 'translate(-50%, -50%) scale(1)';
            panel.style.opacity = '1';
        }, 100);
        
        return panel;
    }
    
    showWelcome() {
        const content = document.querySelector('#guide-content');
        if (!content) return;
        
        content.innerHTML = `
            <div style="text-align: center; padding: 20px;">
                <h1 style="font-size: 3em; margin: 0;">üéÆ</h1>
                <h2 style="margin: 10px 0;">Bem-vindo ao Debug Center!</h2>
                <p style="opacity: 0.9; line-height: 1.6;">
                    Este guia te ensina a usar todas as ferramentas de debug 
                    e valida√ß√£o do sistema de flash sales do Varej√£o.
                </p>
                <div style="
                    background: rgba(255,255,255,0.1);
                    padding: 15px;
                    border-radius: 10px;
                    margin: 20px 0;
                ">
                    <h4>üéØ O que voc√™ aprender√°:</h4>
                    <ul style="text-align: left; line-height: 1.8;">
                        <li>Como usar o simulador de jornada do usu√°rio</li>
                        <li>Como interpretar a valida√ß√£o UX autom√°tica</li>
                        <li>Como monitorar notifica√ß√µes e timers</li>
                        <li>Como usar comandos de debug no console</li>
                        <li>Como acessar o painel de marketing</li>
                    </ul>
                </div>
                <p style="font-size: 0.9em; opacity: 0.8;">
                    Use os bot√µes de navega√ß√£o para percorrer as ferramentas ‚Üí
                </p>
            </div>
        `;
        
        this.updateCounter();
    }
    
    showCurrentTool() {
        if (this.currentTool >= this.tools.length) return;
        
        const tool = this.tools[this.currentTool];
        const content = document.querySelector('#guide-content');
        if (!content) return;
        
        content.innerHTML = `
            <div>
                <h3 style="margin: 0 0 15px 0; font-size: 1.4em;">${tool.name}</h3>
                
                <p style="opacity: 0.9; margin-bottom: 20px;">
                    ${tool.description}
                </p>
                
                <div style="
                    background: rgba(255,255,255,0.1);
                    padding: 15px;
                    border-radius: 10px;
                    margin-bottom: 20px;
                ">
                    <h4 style="margin: 0 0 10px 0;">üìç Localiza√ß√£o:</h4>
                    <p style="margin: 0; opacity: 0.9;">${tool.location}</p>
                </div>
                
                <div style="
                    background: rgba(255,255,255,0.1);
                    padding: 15px;
                    border-radius: 10px;
                    margin-bottom: 20px;
                ">
                    <h4 style="margin: 0 0 10px 0;">üîß Como usar:</h4>
                    <ol style="margin: 0; padding-left: 20px; line-height: 1.6;">
                        ${tool.howToUse.map(step => `<li style="margin: 5px 0;">${step}</li>`).join('')}
                    </ol>
                </div>
                
                <div style="
                    background: rgba(0,0,0,0.2);
                    padding: 15px;
                    border-radius: 10px;
                    font-family: monospace;
                    margin-bottom: 15px;
                ">
                    <h4 style="margin: 0 0 10px 0;">üíª Comandos √∫teis:</h4>
                    ${tool.commands.map(cmd => 
                        `<div style="
                            background: rgba(255,255,255,0.1);
                            padding: 8px;
                            margin: 5px 0;
                            border-radius: 5px;
                            font-size: 0.85em;
                            cursor: pointer;
                        " onclick="navigator.clipboard.writeText('${cmd}')">${cmd}</div>`
                    ).join('')}
                    <p style="font-size: 0.8em; opacity: 0.7; margin: 10px 0 0 0;">
                        üí° Clique nos comandos para copiar
                    </p>
                </div>
            </div>
        `;
        
        this.updateCounter();
    }
    
    nextTool() {
        this.currentTool = Math.min(this.currentTool + 1, this.tools.length - 1);
        this.showCurrentTool();
    }
    
    previousTool() {
        this.currentTool = Math.max(this.currentTool - 1, 0);
        if (this.currentTool === 0) {
            this.showWelcome();
        } else {
            this.showCurrentTool();
        }
    }
    
    updateCounter() {
        const counter = document.querySelector('#tool-counter');
        if (counter) {
            counter.textContent = `${this.currentTool === 0 ? 'In√≠cio' : this.currentTool}/${this.tools.length}`;
        }
    }
    
    demoCurrentTool() {
        if (this.currentTool === 0 || this.currentTool > this.tools.length) {
            this.showAllDemo();
            return;
        }
        
        const tool = this.tools[this.currentTool - 1];
        console.log(`üé¨ Demonstrando: ${tool.name}`);
        tool.demo();
    }
    
    // Demonstra√ß√µes espec√≠ficas
    demoUserJourney() {
        console.log('üöÄ === DEMO: JORNADA DO USU√ÅRIO ===');
        if (window.userJourney) {
            window.userJourney.restart();
            console.log('‚úÖ Simula√ß√£o de jornada reiniciada!');
            console.log('üëÄ Observe o painel no canto superior direito');
        } else {
            console.warn('‚ö†Ô∏è Sistema de jornada ainda n√£o carregado. Aguarde alguns segundos.');
        }
    }
    
    demoUXValidation() {
        console.log('üéØ === DEMO: VALIDA√á√ÉO UX ===');
        if (window.uxValidator) {
            window.uxValidator.runAllTests();
            console.log('‚úÖ Testes UX executados!');
            console.log('üëÄ Observe o painel no canto inferior esquerdo');
        } else {
            console.warn('‚ö†Ô∏è Sistema de valida√ß√£o ainda n√£o carregado. Aguarde alguns segundos.');
        }
    }
    
    demoNotifications() {
        console.log('üîî === DEMO: NOTIFICA√á√ïES ===');
        if (window.notificationSystem) {
            window.notificationSystem.show('üî•', 'Demo: Oferta expirando em 5 minutos!', 'warning');
            setTimeout(() => {
                window.notificationSystem.show('‚úÖ', 'Demo: Sistema funcionando perfeitamente!', 'success');
            }, 2000);
            console.log('‚úÖ Notifica√ß√µes de demo exibidas!');
        } else {
            console.warn('‚ö†Ô∏è Sistema de notifica√ß√µes ainda n√£o carregado.');
        }
    }
    
    demoTimers() {
        console.log('‚è∞ === DEMO: TIMERS ===');
        const timers = document.querySelectorAll('.deal-timer, .timer-container');
        console.log(`üï∞Ô∏è Encontrados ${timers.length} timers ativos`);
        
        timers.forEach((timer, index) => {
            setTimeout(() => {
                timer.style.outline = '3px solid #ff6b6b';
                timer.style.outlineOffset = '5px';
                timer.style.animation = 'pulse 1s infinite';
                
                setTimeout(() => {
                    timer.style.outline = 'none';
                    timer.style.animation = 'none';
                }, 2000);
            }, index * 500);
        });
        
        if (window.offerTimers) {
            console.log('üéØ Timers gerenciados:', window.offerTimers);
        }
    }
    
    demoConsole() {
        console.log('üîß === DEMO: CONSOLE DE DEBUG ===');
        console.log('üí° Pressione F12 para abrir o DevTools');
        console.log('üìù Comandos dispon√≠veis:');
        console.log('  debugOfertas() - Analisa ofertas');
        console.log('  testeNavegacao() - Testa navega√ß√£o');
        console.log('  debugVisual() - An√°lise visual');
        console.log('  debugTimer() - Debug de timers');
        
        // Executa alguns comandos automaticamente
        if (typeof debugOfertas === 'function') {
            console.log('üé¨ Executando debugOfertas():');
            debugOfertas();
        }
    }
    
    demoMarketingPanel() {
        console.log('üìä === DEMO: PAINEL DE MARKETING ===');
        const fab = document.querySelector('#fab-marketing');
        if (fab) {
            // Destaca o bot√£o
            fab.style.animation = 'pulse 2s infinite';
            fab.style.transform = 'scale(1.2)';
            
            setTimeout(() => {
                fab.click();
                fab.style.animation = 'none';
                fab.style.transform = 'scale(1)';
                console.log('‚úÖ Painel de marketing aberto!');
            }, 3000);
            
            console.log('üëÄ Observe o bot√£o flutuante azul destacado');
        } else {
            console.warn('‚ö†Ô∏è Bot√£o de marketing n√£o encontrado');
        }
    }
    
    showAllDemo() {
        console.log('üé™ === DEMONSTRA√á√ÉO COMPLETA ===');
        console.log('üöÄ Executando todas as demonstra√ß√µes...');
        
        this.demoUserJourney();
        setTimeout(() => this.demoUXValidation(), 2000);
        setTimeout(() => this.demoNotifications(), 4000);
        setTimeout(() => this.demoTimers(), 6000);
        setTimeout(() => this.demoMarketingPanel(), 8000);
        
        console.log('‚ú® Todas as demonstra√ß√µes iniciadas!');
    }
    
    showAllCommands() {
        console.log('\nüìù === TODOS OS COMANDOS DE DEBUG ===');
        console.log('\nüöÄ JORNADA DO USU√ÅRIO:');
        console.log('  window.userJourney.restart()');
        console.log('  window.userJourney.nextStep()');
        
        console.log('\nüéØ VALIDA√á√ÉO UX:');
        console.log('  window.uxValidator.runAllTests()');
        console.log('  window.uxValidator.generateReport()');
        
        console.log('\nüîî NOTIFICA√á√ïES:');
        console.log('  window.notificationSystem.show("üî•", "Mensagem", "warning")');
        console.log('  window.notificationSystem.clearAll()');
        
        console.log('\n‚è∞ TIMERS:');
        console.log('  window.offerTimers');
        console.log('  window.offerTimers.simulateExpiry("offer1")');
        
        console.log('\nüîß DEBUG GERAL:');
        console.log('  debugOfertas()');
        console.log('  testeNavegacao()');
        console.log('  debugVisual()');
        console.log('  debugTimer()');
        
        console.log('\nüìä MARKETING:');
        console.log('  document.querySelector("#fab-marketing").click()');
        console.log('  mostrarMetricas()');
        
        console.log('\nüí° Dica: Copie e cole estes comandos no console (F12)');
    }
}

// Auto-inicializa√ß√£o
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(() => {
        console.log('üìö Carregando guia de debug...');
        window.debugGuide = new GuiaDebugInterativo();
    }, 3000);
});

// Comando r√°pido para abrir o guia
function abrirGuiaDebug() {
    if (window.debugGuide) {
        window.debugGuide = new GuiaDebugInterativo();
    } else {
        window.debugGuide = new GuiaDebugInterativo();
    }
}

console.log('üìö Guia de debug carregado! Use abrirGuiaDebug() para iniciar.');